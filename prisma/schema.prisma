generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email    String  @unique
  name     String
  password String
  nickname String?
  image    String?
  active   Boolean @default(true)
  Anime    Anime[]

  @@map("users")
}

model Anime {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title        String
  description  String
  image        String
  episodes     Int
  year         Int
  rating       Float
  publicRating Float?
  status       String?
  trailer      String?
  opinion      String?
  favorite     Boolean?
  following    Boolean?

  userId String? @db.ObjectId
  user   User?   @relation(fields: [userId], references: [id])

  categoryId String?   @db.ObjectId
  Category   Category? @relation(fields: [categoryId], references: [id])

  characterId   String?         @db.ObjectId
  Character     Character?      @relation(fields: [characterId], references: [id])
  AnimeOpenings AnimeOpenings[]
  Season        Season?         @relation(fields: [seasonId], references: [id])
  seasonId      String?         @db.ObjectId
}

model AnimeOpenings {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title String
  audio String
  video String

  animeId String @db.ObjectId
  Anime   Anime  @relation(fields: [animeId], references: [id])
}

model Season {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String
  description String
  year        Int
  episodes    Int
  image       String
  status      String?
  opinion     String?

  Anime Anime[]
}

model Category {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String
  description String
  Anime       Anime[]
}

model Character {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String
  description String
  image       String
  Anime       Anime[]
}
